ARM GAS  /tmp/ccmnfKNS.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.StartControllerTask,"ax",%progbits
  18              		.align	1
  19              		.weak	StartControllerTask
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	StartControllerTask:
  25              	.LFB70:
  26              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** 
  29:Core/Src/freertos.c **** /* USER CODE END Includes */
  30:Core/Src/freertos.c **** 
  31:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccmnfKNS.s 			page 2


  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END PTD */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PM */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END Variables */
  50:Core/Src/freertos.c **** /* Definitions for controllerTask */
  51:Core/Src/freertos.c **** osThreadId_t controllerTaskHandle;
  52:Core/Src/freertos.c **** const osThreadAttr_t controllerTask_attributes = {
  53:Core/Src/freertos.c ****   .name = "controllerTask",
  54:Core/Src/freertos.c ****   .stack_size = 512 * 4,
  55:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  56:Core/Src/freertos.c **** };
  57:Core/Src/freertos.c **** /* Definitions for sensorTask */
  58:Core/Src/freertos.c **** osThreadId_t sensorTaskHandle;
  59:Core/Src/freertos.c **** const osThreadAttr_t sensorTask_attributes = {
  60:Core/Src/freertos.c ****   .name = "sensorTask",
  61:Core/Src/freertos.c ****   .stack_size = 512 * 4,
  62:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal4,
  63:Core/Src/freertos.c **** };
  64:Core/Src/freertos.c **** /* Definitions for serialTask */
  65:Core/Src/freertos.c **** osThreadId_t serialTaskHandle;
  66:Core/Src/freertos.c **** const osThreadAttr_t serialTask_attributes = {
  67:Core/Src/freertos.c ****   .name = "serialTask",
  68:Core/Src/freertos.c ****   .stack_size = 512 * 4,
  69:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityLow,
  70:Core/Src/freertos.c **** };
  71:Core/Src/freertos.c **** 
  72:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  73:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  76:Core/Src/freertos.c **** 
  77:Core/Src/freertos.c **** void StartControllerTask(void *argument);
  78:Core/Src/freertos.c **** void StartSensorTask(void *argument);
  79:Core/Src/freertos.c **** void StartSerialTask(void *argument);
  80:Core/Src/freertos.c **** 
  81:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  82:Core/Src/freertos.c **** 
  83:Core/Src/freertos.c **** /**
  84:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  85:Core/Src/freertos.c ****   * @param  None
  86:Core/Src/freertos.c ****   * @retval None
  87:Core/Src/freertos.c ****   */
  88:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  89:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/ccmnfKNS.s 			page 3


  90:Core/Src/freertos.c **** 
  91:Core/Src/freertos.c ****   /* USER CODE END Init */
  92:Core/Src/freertos.c **** 
  93:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  94:Core/Src/freertos.c ****   /* add mutexes, ... */
  95:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  96:Core/Src/freertos.c **** 
  97:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  98:Core/Src/freertos.c ****   /* add semaphores, ... */
  99:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 100:Core/Src/freertos.c **** 
 101:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 102:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 103:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 104:Core/Src/freertos.c **** 
 105:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 106:Core/Src/freertos.c ****   /* add queues, ... */
 107:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 108:Core/Src/freertos.c **** 
 109:Core/Src/freertos.c ****   /* Create the thread(s) */
 110:Core/Src/freertos.c ****   /* creation of controllerTask */
 111:Core/Src/freertos.c ****   controllerTaskHandle = osThreadNew(StartControllerTask, NULL, &controllerTask_attributes);
 112:Core/Src/freertos.c **** 
 113:Core/Src/freertos.c ****   /* creation of sensorTask */
 114:Core/Src/freertos.c ****   sensorTaskHandle = osThreadNew(StartSensorTask, NULL, &sensorTask_attributes);
 115:Core/Src/freertos.c **** 
 116:Core/Src/freertos.c ****   /* creation of serialTask */
 117:Core/Src/freertos.c ****   serialTaskHandle = osThreadNew(StartSerialTask, NULL, &serialTask_attributes);
 118:Core/Src/freertos.c **** 
 119:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 120:Core/Src/freertos.c ****   /* add threads, ... */
 121:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 122:Core/Src/freertos.c **** 
 123:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 124:Core/Src/freertos.c ****   /* add events, ... */
 125:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 126:Core/Src/freertos.c **** 
 127:Core/Src/freertos.c **** }
 128:Core/Src/freertos.c **** 
 129:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartControllerTask */
 130:Core/Src/freertos.c **** /**
 131:Core/Src/freertos.c ****   * @brief  Function implementing the controllerTask thread.
 132:Core/Src/freertos.c ****   * @param  argument: Not used
 133:Core/Src/freertos.c ****   * @retval None
 134:Core/Src/freertos.c ****   */
 135:Core/Src/freertos.c **** /* USER CODE END Header_StartControllerTask */
 136:Core/Src/freertos.c **** __weak void StartControllerTask(void *argument)
 137:Core/Src/freertos.c **** {
  27              		.loc 1 137 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32              		.loc 1 137 1 is_stmt 0 view .LVU1
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccmnfKNS.s 			page 4


  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  38              	.LVL1:
  39              	.L2:
 138:Core/Src/freertos.c ****   /* USER CODE BEGIN StartControllerTask */
 139:Core/Src/freertos.c ****   /* Infinite loop */
 140:Core/Src/freertos.c ****   for(;;)
  40              		.loc 1 140 3 is_stmt 1 discriminator 1 view .LVU2
 141:Core/Src/freertos.c ****   {
 142:Core/Src/freertos.c ****     osDelay(1);
  41              		.loc 1 142 5 discriminator 1 view .LVU3
  42 0002 0120     		movs	r0, #1
  43 0004 FFF7FEFF 		bl	osDelay
  44              	.LVL2:
 140:Core/Src/freertos.c ****   {
  45              		.loc 1 140 8 discriminator 1 view .LVU4
  46 0008 FBE7     		b	.L2
  47              		.cfi_endproc
  48              	.LFE70:
  50              		.section	.text.StartSensorTask,"ax",%progbits
  51              		.align	1
  52              		.weak	StartSensorTask
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  57              	StartSensorTask:
  58              	.LFB71:
 143:Core/Src/freertos.c ****   }
 144:Core/Src/freertos.c ****   /* USER CODE END StartControllerTask */
 145:Core/Src/freertos.c **** }
 146:Core/Src/freertos.c **** 
 147:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartSensorTask */
 148:Core/Src/freertos.c **** /**
 149:Core/Src/freertos.c **** * @brief Function implementing the sensorTask thread.
 150:Core/Src/freertos.c **** * @param argument: Not used
 151:Core/Src/freertos.c **** * @retval None
 152:Core/Src/freertos.c **** */
 153:Core/Src/freertos.c **** /* USER CODE END Header_StartSensorTask */
 154:Core/Src/freertos.c **** __weak void StartSensorTask(void *argument)
 155:Core/Src/freertos.c **** {
  59              		.loc 1 155 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              	.LVL3:
  64              		.loc 1 155 1 is_stmt 0 view .LVU6
  65 0000 08B5     		push	{r3, lr}
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 3, -8
  69              		.cfi_offset 14, -4
  70              	.LVL4:
  71              	.L5:
 156:Core/Src/freertos.c ****   /* USER CODE BEGIN StartSensorTask */
 157:Core/Src/freertos.c ****   /* Infinite loop */
 158:Core/Src/freertos.c ****   for(;;)
  72              		.loc 1 158 3 is_stmt 1 discriminator 1 view .LVU7
ARM GAS  /tmp/ccmnfKNS.s 			page 5


 159:Core/Src/freertos.c ****   {
 160:Core/Src/freertos.c ****     osDelay(1);
  73              		.loc 1 160 5 discriminator 1 view .LVU8
  74 0002 0120     		movs	r0, #1
  75 0004 FFF7FEFF 		bl	osDelay
  76              	.LVL5:
 158:Core/Src/freertos.c ****   {
  77              		.loc 1 158 8 discriminator 1 view .LVU9
  78 0008 FBE7     		b	.L5
  79              		.cfi_endproc
  80              	.LFE71:
  82              		.section	.text.StartSerialTask,"ax",%progbits
  83              		.align	1
  84              		.weak	StartSerialTask
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  89              	StartSerialTask:
  90              	.LFB72:
 161:Core/Src/freertos.c ****   }
 162:Core/Src/freertos.c ****   /* USER CODE END StartSensorTask */
 163:Core/Src/freertos.c **** }
 164:Core/Src/freertos.c **** 
 165:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartSerialTask */
 166:Core/Src/freertos.c **** /**
 167:Core/Src/freertos.c **** * @brief Function implementing the serialTask thread.
 168:Core/Src/freertos.c **** * @param argument: Not used
 169:Core/Src/freertos.c **** * @retval None
 170:Core/Src/freertos.c **** */
 171:Core/Src/freertos.c **** /* USER CODE END Header_StartSerialTask */
 172:Core/Src/freertos.c **** __weak void StartSerialTask(void *argument)
 173:Core/Src/freertos.c **** {
  91              		.loc 1 173 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL6:
  96              		.loc 1 173 1 is_stmt 0 view .LVU11
  97 0000 08B5     		push	{r3, lr}
  98              	.LCFI2:
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 3, -8
 101              		.cfi_offset 14, -4
 102              	.LVL7:
 103              	.L8:
 174:Core/Src/freertos.c ****   /* USER CODE BEGIN StartSerialTask */
 175:Core/Src/freertos.c ****   /* Infinite loop */
 176:Core/Src/freertos.c ****   for(;;)
 104              		.loc 1 176 3 is_stmt 1 discriminator 1 view .LVU12
 177:Core/Src/freertos.c ****   {
 178:Core/Src/freertos.c ****     osDelay(1);
 105              		.loc 1 178 5 discriminator 1 view .LVU13
 106 0002 0120     		movs	r0, #1
 107 0004 FFF7FEFF 		bl	osDelay
 108              	.LVL8:
 176:Core/Src/freertos.c ****   {
 109              		.loc 1 176 8 discriminator 1 view .LVU14
ARM GAS  /tmp/ccmnfKNS.s 			page 6


 110 0008 FBE7     		b	.L8
 111              		.cfi_endproc
 112              	.LFE72:
 114              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 115              		.align	1
 116              		.global	MX_FREERTOS_Init
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	MX_FREERTOS_Init:
 122              	.LFB69:
  88:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 123              		.loc 1 88 29 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127 0000 08B5     		push	{r3, lr}
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
 111:Core/Src/freertos.c **** 
 132              		.loc 1 111 3 view .LVU16
 111:Core/Src/freertos.c **** 
 133              		.loc 1 111 26 is_stmt 0 view .LVU17
 134 0002 0B4A     		ldr	r2, .L12
 135 0004 0021     		movs	r1, #0
 136 0006 0B48     		ldr	r0, .L12+4
 137 0008 FFF7FEFF 		bl	osThreadNew
 138              	.LVL9:
 111:Core/Src/freertos.c **** 
 139              		.loc 1 111 24 view .LVU18
 140 000c 0A4B     		ldr	r3, .L12+8
 141 000e 1860     		str	r0, [r3]
 114:Core/Src/freertos.c **** 
 142              		.loc 1 114 3 is_stmt 1 view .LVU19
 114:Core/Src/freertos.c **** 
 143              		.loc 1 114 22 is_stmt 0 view .LVU20
 144 0010 0A4A     		ldr	r2, .L12+12
 145 0012 0021     		movs	r1, #0
 146 0014 0A48     		ldr	r0, .L12+16
 147 0016 FFF7FEFF 		bl	osThreadNew
 148              	.LVL10:
 114:Core/Src/freertos.c **** 
 149              		.loc 1 114 20 view .LVU21
 150 001a 0A4B     		ldr	r3, .L12+20
 151 001c 1860     		str	r0, [r3]
 117:Core/Src/freertos.c **** 
 152              		.loc 1 117 3 is_stmt 1 view .LVU22
 117:Core/Src/freertos.c **** 
 153              		.loc 1 117 22 is_stmt 0 view .LVU23
 154 001e 0A4A     		ldr	r2, .L12+24
 155 0020 0021     		movs	r1, #0
 156 0022 0A48     		ldr	r0, .L12+28
 157 0024 FFF7FEFF 		bl	osThreadNew
 158              	.LVL11:
 117:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccmnfKNS.s 			page 7


 159              		.loc 1 117 20 view .LVU24
 160 0028 094B     		ldr	r3, .L12+32
 161 002a 1860     		str	r0, [r3]
 127:Core/Src/freertos.c **** 
 162              		.loc 1 127 1 view .LVU25
 163 002c 08BD     		pop	{r3, pc}
 164              	.L13:
 165 002e 00BF     		.align	2
 166              	.L12:
 167 0030 00000000 		.word	.LANCHOR0
 168 0034 00000000 		.word	StartControllerTask
 169 0038 00000000 		.word	.LANCHOR1
 170 003c 00000000 		.word	.LANCHOR2
 171 0040 00000000 		.word	StartSensorTask
 172 0044 00000000 		.word	.LANCHOR3
 173 0048 00000000 		.word	.LANCHOR4
 174 004c 00000000 		.word	StartSerialTask
 175 0050 00000000 		.word	.LANCHOR5
 176              		.cfi_endproc
 177              	.LFE69:
 179              		.global	serialTask_attributes
 180              		.section	.rodata.str1.4,"aMS",%progbits,1
 181              		.align	2
 182              	.LC0:
 183 0000 73657269 		.ascii	"serialTask\000"
 183      616C5461 
 183      736B00
 184              		.global	serialTaskHandle
 185              		.global	sensorTask_attributes
 186 000b 00       		.align	2
 187              	.LC1:
 188 000c 73656E73 		.ascii	"sensorTask\000"
 188      6F725461 
 188      736B00
 189              		.global	sensorTaskHandle
 190              		.global	controllerTask_attributes
 191 0017 00       		.align	2
 192              	.LC2:
 193 0018 636F6E74 		.ascii	"controllerTask\000"
 193      726F6C6C 
 193      65725461 
 193      736B00
 194              		.global	controllerTaskHandle
 195              		.section	.bss.controllerTaskHandle,"aw",%nobits
 196              		.align	2
 197              		.set	.LANCHOR1,. + 0
 200              	controllerTaskHandle:
 201 0000 00000000 		.space	4
 202              		.section	.bss.sensorTaskHandle,"aw",%nobits
 203              		.align	2
 204              		.set	.LANCHOR3,. + 0
 207              	sensorTaskHandle:
 208 0000 00000000 		.space	4
 209              		.section	.bss.serialTaskHandle,"aw",%nobits
 210              		.align	2
 211              		.set	.LANCHOR5,. + 0
 214              	serialTaskHandle:
ARM GAS  /tmp/ccmnfKNS.s 			page 8


 215 0000 00000000 		.space	4
 216              		.section	.rodata.controllerTask_attributes,"a"
 217              		.align	2
 218              		.set	.LANCHOR0,. + 0
 221              	controllerTask_attributes:
 222 0000 18000000 		.word	.LC2
 223 0004 00000000 		.space	16
 223      00000000 
 223      00000000 
 223      00000000 
 224 0014 00080000 		.word	2048
 225 0018 18000000 		.word	24
 226 001c 00000000 		.space	8
 226      00000000 
 227              		.section	.rodata.sensorTask_attributes,"a"
 228              		.align	2
 229              		.set	.LANCHOR2,. + 0
 232              	sensorTask_attributes:
 233 0000 0C000000 		.word	.LC1
 234 0004 00000000 		.space	16
 234      00000000 
 234      00000000 
 234      00000000 
 235 0014 00080000 		.word	2048
 236 0018 1C000000 		.word	28
 237 001c 00000000 		.space	8
 237      00000000 
 238              		.section	.rodata.serialTask_attributes,"a"
 239              		.align	2
 240              		.set	.LANCHOR4,. + 0
 243              	serialTask_attributes:
 244 0000 00000000 		.word	.LC0
 245 0004 00000000 		.space	16
 245      00000000 
 245      00000000 
 245      00000000 
 246 0014 00080000 		.word	2048
 247 0018 08000000 		.word	8
 248 001c 00000000 		.space	8
 248      00000000 
 249              		.text
 250              	.Letext0:
 251              		.file 2 "/home/luca/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 252              		.file 3 "/home/luca/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 253              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
ARM GAS  /tmp/ccmnfKNS.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccmnfKNS.s:18     .text.StartControllerTask:0000000000000000 $t
     /tmp/ccmnfKNS.s:24     .text.StartControllerTask:0000000000000000 StartControllerTask
     /tmp/ccmnfKNS.s:51     .text.StartSensorTask:0000000000000000 $t
     /tmp/ccmnfKNS.s:57     .text.StartSensorTask:0000000000000000 StartSensorTask
     /tmp/ccmnfKNS.s:83     .text.StartSerialTask:0000000000000000 $t
     /tmp/ccmnfKNS.s:89     .text.StartSerialTask:0000000000000000 StartSerialTask
     /tmp/ccmnfKNS.s:115    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccmnfKNS.s:121    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccmnfKNS.s:167    .text.MX_FREERTOS_Init:0000000000000030 $d
     /tmp/ccmnfKNS.s:243    .rodata.serialTask_attributes:0000000000000000 serialTask_attributes
     /tmp/ccmnfKNS.s:181    .rodata.str1.4:0000000000000000 $d
     /tmp/ccmnfKNS.s:214    .bss.serialTaskHandle:0000000000000000 serialTaskHandle
     /tmp/ccmnfKNS.s:232    .rodata.sensorTask_attributes:0000000000000000 sensorTask_attributes
     /tmp/ccmnfKNS.s:207    .bss.sensorTaskHandle:0000000000000000 sensorTaskHandle
     /tmp/ccmnfKNS.s:221    .rodata.controllerTask_attributes:0000000000000000 controllerTask_attributes
     /tmp/ccmnfKNS.s:200    .bss.controllerTaskHandle:0000000000000000 controllerTaskHandle
     /tmp/ccmnfKNS.s:196    .bss.controllerTaskHandle:0000000000000000 $d
     /tmp/ccmnfKNS.s:203    .bss.sensorTaskHandle:0000000000000000 $d
     /tmp/ccmnfKNS.s:210    .bss.serialTaskHandle:0000000000000000 $d
     /tmp/ccmnfKNS.s:217    .rodata.controllerTask_attributes:0000000000000000 $d
     /tmp/ccmnfKNS.s:228    .rodata.sensorTask_attributes:0000000000000000 $d
     /tmp/ccmnfKNS.s:239    .rodata.serialTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
osDelay
osThreadNew
